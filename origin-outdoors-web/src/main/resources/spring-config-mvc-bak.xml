<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-3.1.xsd
	     http://www.springframework.org/schema/mvc
         http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
         http://www.springframework.org/schema/util
    	 http://www.springframework.org/schema/util/spring-util-3.1.xsd" default-autowire="byName">
  
  <context:component-scan base-package="com.origin.outdoors.controller" />
  
  <!-- static resources -->
  <mvc:resources location="/static/" mapping="/static/**" cache-period="864000"/>
  
  <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	  <property name="locations">
	      <list>
	          <value>classpath:config.properties</value>
	      </list>
	  </property>
  </bean>

  <!-- <bean id="objectMapper" class="org.codehaus.jackson.map.ObjectMapper">
    <property name="dateFormat">
      <bean class="java.text.SimpleDateFormat">
        <constructor-arg value="${common.dateFormat}"/>
      </bean>
    </property>
  </bean> -->
  
  <mvc:annotation-driven />

  <!-- <bean id="conversionService"
        class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
    <property name="formatters">
      <set>
        <bean class="com.jd.o2o.commons.springmvc.ext.convert.DateFormatter">
          <property name="format" value="${common.dateFormat}"/>
        </bean>
      </set>
    </property>
  </bean> -->

  <!-- <mvc:annotation-driven conversion-service="conversionService">
    <mvc:message-converters>
        <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
        <bean class="com.jd.o2o.commons.springmvc.ext.convert.CustomMappingJacksonHttpMessageConverter">
        <property name="supportedMediaTypes">
          <list>
            <value>application/json</value>
            <value>application/javascript</value>
            <value>text/json</value>
            <value>text/javascript</value>
            <value>text/html</value>
          </list>
        </property>
        <property name="objectMapper" ref="objectMapper">
        </property>
        <property name="failOnUnknownProperties" value="false"/>
        <property name="serializationInclusion">
          <util:constant static-field="org.codehaus.jackson.map.annotate.JsonSerialize.Inclusion.NON_NULL"/>
        </property>
      </bean>
    </mvc:message-converters>
    <mvc:argument-resolvers>
      <bean class="com.jd.o2o.commons.springmvc.ext.method.annotation.RequestJsonParamMethodArgumentResolver"/>
    </mvc:argument-resolvers>
  </mvc:annotation-driven> -->

  <!-- <bean id="mappingJacksonHttpMessageConverter"
        class="com.jd.o2o.commons.springmvc.ext.convert.CustomMappingJacksonHttpMessageConverter">
    <property name="supportedMediaTypes">
      <list>
        <value>application/json</value>
        <value>application/javascript</value>
        <value>text/json</value>
        <value>text/javascript</value>
        <value>text/plain</value>
        <value>text/html</value>
      </list>
    </property>
    <property name="objectMapper" ref="objectMapper">
    </property>
    <property name="failOnUnknownProperties" value="false"/>
    <property name="serializationInclusion">
      <util:constant static-field="org.codehaus.jackson.map.annotate.JsonSerialize.Inclusion.NON_NULL"/>
    </property>
  </bean> -->

  <util:list id="messageConverters">
    <ref bean="mappingJacksonHttpMessageConverter"></ref>
  </util:list>

  <!-- upload --><!--
  <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    <property name="defaultEncoding" value="UTF-8"/>
    <property name="maxUploadSize" value="5000000"/>
  </bean>-->

  <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
    <property name="cookieName" value="_clientlocale"/>
    <property name="defaultLocale" value="zh_CN"/>
    <property name="cookieMaxAge" value="2147483647"/>
  </bean>

  <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
    <property name="basenames">
      <list>
        <value>messages.demo</value>
        <value>messages.common</value>
      </list>
    </property>
  </bean>

  <bean id="velocityConfigurer" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
    <property name="resourceLoaderPath" value="/WEB-INF/vm/"/>
    <property name="velocityProperties">
      <props>
        <prop key="input.encoding">UTF-8</prop>
        <prop key="output.encoding">UTF-8</prop>
        <prop key="contentType">text/html;charset=UTF-8</prop><!--
        <prop key="userdirective">com.jd.josl.privilege.sdk4app.velocity.DictDirective,com.jd.josl.privilege.security.web.velocity.AppSyncDirective</prop>-->
      </props>
    </property>
  </bean>

  <!-- velocity view resolver -->
  <bean id="velocityViewResolver" class="org.springframework.web.servlet.view.velocity.VelocityLayoutViewResolver">
    <property name="layoutUrl" value="layout/default.vm"/>
    <property name="cache" value="false"/>
    <property name="suffix" value=".vm"/>
    <property name="exposeSpringMacroHelpers" value="true"/>
    <property name="dateToolAttribute" value="dateTool"/>
    <property name="numberToolAttribute" value="numberTool"/>
    <!-- Merge urlBuilderMap to view context for convenience. You can put your tools which must be thread safe. -->
    <!--        <property name="attributesMap" ref="_urlBuilderMap"/>-->
    <property name="contentType" value="text/html;charset=UTF-8"/>
    <property name="toolboxConfigLocation" value="/WEB-INF/vm/velocity-tools.xml"/>
  </bean>

  <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
    <property name="defaultContentType" value="text/html"/>
    <!-- not by accept header -->
    <property name="ignoreAcceptHeader" value="true"/>
    <!-- by extension -->
    <property name="mediaTypes">
      <map>
        <entry key="xml" value="application/xml"/>
        <entry key="json" value="application/json"/>
      </map>
    </property>
    <property name="viewResolvers">
      <list>
        <ref bean="velocityViewResolver"/>
      </list>
    </property>
    <property name="defaultViews">
      <list>
        <!-- for application/json -->
        <bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView"/>
      </list>
    </property>
  </bean>

  <!-- <bean class="org.springframework.web.servlet.handler.HandlerExceptionResolverComposite">
    <property name="exceptionResolvers">
      <util:list>
        <bean class="com.jd.o2o.commons.springmvc.exception.resolver.O2OExceptionResolver">
          <property name="order" value="1"></property>
          <property name="defaultErrorView" value="error/caught"/>
          <property name="exceptionMappings">
            <props>
              <prop key="com.jd.o2o.commons.domain.exception.O2OException">error/caught</prop>
            </props>
          </property>
        </bean>
        <bean class="com.jd.o2o.commons.springmvc.ext.exception.resolver.DefaultResponseBodyExceptionResolver">
          <property name="order" value="3"></property>
        </bean>
        <bean class="com.jd.o2o.commons.springmvc.exception.resolver.DefaultExceptionResolver">
          <property name="order" value="4"></property>
          <property name="defaultErrorView" value="error/uncaught"/>
        </bean>
      </util:list>
    </property>
  </bean> -->
</beans>
